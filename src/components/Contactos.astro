---
declare global {
    interface Window {
        grecaptcha: any;
    }
}
---
<section class="bg-white sm:p-4 lg:max-w-7xl mx-auto">
    <div class="p-8 rounded-md mb-8">
        <div class="text-center space-y-2 mb-8">
            <h2 class="text-zinc-900 text-3xl font-medium text-center">
                Ponte en contacto con nosotros
            </h2>
            <p class="text-zinc-700">
                Su dirección de correo electrónica no será publicada
            </p>
            <p class="text-sm text-orange-600">
                Los campos obligatorios están marcados*
            </p>
        </div>

        <form id="contact-form" class="md:col-span-3" method="POST">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <label for="name" class="text-gray-500 mb-2 block">
                        Nombre y Apellidos
                    </label>
                    <input class="p-4 border border-gray-400 outline-orange-200 rounded-lg w-full" type="text" id="name" name="name" placeholder="Ingrese sus datos" required>
                </div>
                <div>
                    <label for="email" class="text-gray-500 mb-2 block">
                        Correo electrónico
                    </label>
                    <input class="p-4 border border-gray-400 outline-orange-200 rounded-lg w-full" type="email" id="email" name="email" placeholder="Ingrese un correo electrónico" required>
                </div>
                <div>
                    <label for="telephone" class="text-gray-500 mb-2 block">
                        Número telefónico
                    </label>
                    <input class="p-4 border border-gray-400 outline-orange-200 rounded-lg w-full" type="tel" id="telephone" name="telephone" placeholder="Ingrese un número telefónico" required pattern="[0-9]{9,15}" title="Debe contener entre 9 y 15 dígitos numéricos">
                </div>
                <div>
                    <label for="subject" class="text-gray-500 mb-2 block">
                        Asunto
                    </label>
                    <input class="p-4 border border-gray-400 outline-orange-200 rounded-lg w-full" type="text" id="subject" name="subject" placeholder="Ingrese el asunto" required>
                </div>
                <div class="md:col-span-2">
                    <label for="message" class="text-gray-500 mb-2 block">
                        Mensaje
                    </label>
                    <textarea class="p-4 border border-gray-400 outline-orange-200 rounded-lg w-full" id="message" name="message" placeholder="Escribe tu mensaje aquí... (mínimo 50 caracteres)" required minlength="50" maxlength="1000"></textarea>
                    <p class="text-sm text-gray-500 mt-1">Mínimo 50 caracteres.</p>
                </div>                
                <div class="mt-4 flex justify-center md:col-span-2 lg:flex lg:justify-center">
                    <div class="g-recaptcha scale-90 sm:scale-100" data-sitekey="6LduDOEqAAAAAHrR5epew3kjFVYWJw6hsDi8qrNw"></div>
                </div>
            </div>
            <div class="mt-4 text-center">
                <button type="submit" class="py-4 px-8 text-center bg-green-950 hover:bg-orange-600 rounded-md text-white text-md cursor-pointer">
                    Enviar mensaje
                    <i class="fa-solid fa-location-arrow ml-2"></i>
                </button>
            </div>
            <p id="form-status" class="text-center text-md text-green-700 mt-4 hidden"></p>
        </form>
    </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const form = document.getElementById("contact-form") as HTMLFormElement;
        const statusMessage = document.getElementById("form-status") as HTMLElement;
        const submitButton = form.querySelector("button[type='submit']") as HTMLButtonElement;

        if (!form || !statusMessage || !submitButton) return;

        form.addEventListener("submit", async (event) => {
            event.preventDefault();

            // Deshabilitar el botón para evitar múltiples envíos
            submitButton.disabled = true;
            submitButton.classList.add("opacity-50", "cursor-not-allowed");

            if (typeof window.grecaptcha === "undefined") {
                statusMessage.textContent = "⚠️ Error al cargar reCAPTCHA.";
                statusMessage.classList.remove("hidden", "text-green-700");
                statusMessage.classList.add("text-orange-600");
                submitButton.disabled = false;
                submitButton.classList.remove("opacity-50", "cursor-not-allowed");
                return;
            }

            const recaptchaToken = window.grecaptcha.getResponse();
            if (!recaptchaToken) {
                statusMessage.textContent = "⚠️ Verifica que no eres un robot.";
                statusMessage.classList.remove("hidden", "text-green-700");
                statusMessage.classList.add("text-orange-600");
                submitButton.disabled = false;
                submitButton.classList.remove("opacity-50", "cursor-not-allowed");
                return;
            }

            const formData = {
                name: (document.getElementById("name") as HTMLInputElement)?.value.trim(),
                email: (document.getElementById("email") as HTMLInputElement)?.value.trim(),
                telephone: (document.getElementById("telephone") as HTMLInputElement)?.value.trim(),
                subject: (document.getElementById("subject") as HTMLInputElement)?.value.trim(),
                message: (document.getElementById("message") as HTMLInputElement)?.value.trim(),
                recaptchaToken
            };

            if (Object.values(formData).some(value => !value)) {
                statusMessage.textContent = "⚠️ Todos los campos son obligatorios.";
                statusMessage.classList.remove("hidden", "text-green-700");
                statusMessage.classList.add("text-orange-600");
                submitButton.disabled = false;
                submitButton.classList.remove("opacity-50", "cursor-not-allowed");
                return;
            }

            try {
                const response = await fetch("/api/send-email", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(formData)
                });

                const result = await response.json();

                if (response.ok) {
                    statusMessage.textContent = "✅ ¡Mensaje enviado correctamente!";
                    statusMessage.classList.remove("hidden", "text-orange-600");
                    statusMessage.classList.add("text-green-700");
                    form.reset();
                    window.grecaptcha.reset();
                } else {
                    throw new Error(result.error || "Error al enviar el mensaje.");
                }
            } catch {
                statusMessage.textContent = "❌ Hubo un error al enviar el mensaje.";
                statusMessage.classList.remove("hidden", "text-green-700");
                statusMessage.classList.add("text-orange-600");
            } finally {
                // Reactivar el botón después de recibir respuesta
                submitButton.disabled = false;
                submitButton.classList.remove("opacity-50", "cursor-not-allowed");
            }
        });
    });
</script>